plugins {
    id "application"
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id "org.beryx.jlink" version "2.24.1"
}

group 'com.thomasjwilde'
version '1.0.0'


repositories {
    mavenCentral()
}

dependencies {

    implementation project(':lib')

    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

javafx {
    version = '15'
    modules = ['javafx.base', 'javafx.graphics', 'javafx.controls', 'javafx.web']
}


test {
    useJUnitPlatform()
}

application {
    mainModule = "com.thomasjwilde.demos.pdf"
    mainClass = "com.thomasjwilde.demos.pdf.Main"
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    forceMerge('log4j')

    launcher {
        name = 'JavaFX PDF Viewer'
        noConsole = true
    }
    addExtraDependencies("javafx")

    jpackage {

        jpackageHome = 'C:/Program Files/Amazon Corretto/jdk17.0.2_8'
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        icon = "src/main/resources/pdf-file.$imgType"

        if (currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu']
        }
    }

    /*
    customImage {
        appModules = ['javafx.base', 'javafx.controls', 'javafx.graphics', 'javafx.web', 'jdk.crypto.cryptoki', 'com.thomasjwilde.pdf']
    }
    */

}